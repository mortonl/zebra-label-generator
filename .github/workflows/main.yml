# .github/workflows/main.yml
name: Main Branch Deploy

run-name: ${{ github.actor }} is deploying to main branch ðŸš€

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write

jobs:
  build:
    uses: ./.github/workflows/build.yml

  version-sign-and-deploy:
    needs: [ build ]
    runs-on: ubuntu-latest
    environment: production
    outputs:
      new-version: ${{ steps.increment-version.outputs.new-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: maven
          cache-dependency-path: 'pom.xml'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Add mask for GPG email
        run: echo "::add-mask::${{ secrets.GPG_EMAIL }}"

      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          # git_push_gpgsign: true

      # https://github.com/RichardInnocent/semantic-versioning-maven
      - name: Increment version
        id: increment-version
        uses: RichardInnocent/semantic-versioning-maven@v0.1.0
        with:
          git-email: ${{ secrets.GPG_EMAIL }}
          git-username: ${{ secrets.GPG_USERNAME }}

      - name: Print if version changed
        if: steps.increment-version.outputs.previous-version != steps.increment-version.outputs.new-version
        run: echo "The new version is now ${{ steps.increment-version.outputs.new-version }}"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: target

      - name: Sign and deploy
        env:
          MAVEN_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.CENTRAL_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: ./mvnw package gpg:sign deploy

      - uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco/

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          jacoco-csv-file: 'target/site/jacoco/jacoco.csv'
          generate-branches-badge: true
          coverage-label: Coverage (Overall)
          branches-label: Coverage (Branches)

      - name: Commit and push the badge
        run: |
          git add *.svg
          git commit -S -m "docs(badges): update code coverage badge [skip ci]"
          git push
